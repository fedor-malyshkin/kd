{
  "openapi": "3.0.1",
  "info": {
    "title": "Lynk API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://api.staging.kartera.com",
      "description": "Generated server url"
    }
  ],
  "tags": [
    {
      "name": "Rewards",
      "description": "Rewards API"
    },
    {
      "name": "webhooks",
      "description": "Webhook API"
    },
    {
      "name": "product users",
      "description": "Product Users API"
    },
    {
      "name": "Payments fee",
      "description": "Payments API"
    },
    {
      "name": "staff user ops",
      "description": "Staff Users API"
    },
    {
      "name": "TOTP Controller",
      "description": "TOTP API"
    },
    {
      "name": "partner",
      "description": "Partners API"
    },
    {
      "name": "linked account",
      "description": "Linked Account API"
    },
    {
      "name": "staff admin ops",
      "description": "Staff Admin API"
    },
    {
      "name": "api key",
      "description": "Api Key API"
    },
    {
      "name": "billing",
      "description": "Billing API"
    },
    {
      "name": "partner users",
      "description": "Partner Users API"
    },
    {
      "name": "Api doc",
      "description": "Api doc"
    },
    {
      "name": "Reports",
      "description": "Reports API"
    },
    {
      "name": "authentication/otp-token",
      "description": "Authentication and OTP Token API"
    },
    {
      "name": "Actuator",
      "description": "Monitor and interact",
      "externalDocs": {
        "description": "Spring Boot Actuator Web API Documentation",
        "url": "https://docs.spring.io/spring-boot/docs/current/actuator-api/html/"
      }
    },
    {
      "name": "payments",
      "description": "Payments API"
    },
    {
      "name": "products",
      "description": "Products API"
    },
    {
      "name": "recurring-payments",
      "description": "Recurring Payments API"
    },
    {
      "name": "widgets",
      "description": "Widget API"
    },
    {
      "name": "plaid tokens",
      "description": "Plaid API"
    },
    {
      "name": "staff billing ops",
      "description": "Staff Billing API"
    },
    {
      "name": "otp code",
      "description": "OTP Code API"
    }
  ],
  "paths": {
    "/v1/webhooks": {
      "get": {
        "tags": [
          "webhooks"
        ],
        "summary": "List webhooks (API)",
        "operationId": "listWebhookAPI",
        "parameters": [
          {
            "name": "event",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "url",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": [
                "created_at,DESC"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryRespWebhookResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "api-key": []
          }
        ]
      },
      "post": {
        "tags": [
          "webhooks"
        ],
        "summary": "Create a new webhook (API)",
        "operationId": "createWebhookAPI",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookCreateReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "api-key": []
          }
        ]
      }
    },
    "/v1/webhook/dwolla/notify": {
      "post": {
        "tags": [
          "dwolla-webhook-controller"
        ],
        "operationId": "notify",
        "parameters": [
          {
            "name": "X-Dwolla-Topic",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "X-Request-Signature-SHA-256",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v1/users": {
      "get": {
        "tags": [
          "product users"
        ],
        "summary": "List product users (API)",
        "operationId": "listProductUsersAPI",
        "parameters": [
          {
            "name": "active",
            "in": "query",
            "description": "Is user active",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": [
                "created_at,DESC"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryRespProductUserResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "api-key": []
          }
        ]
      },
      "post": {
        "tags": [
          "product users"
        ],
        "summary": "Create a new product user (API)",
        "operationId": "createProductUserAPI",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductUserCreateReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductUserResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "api-key": []
          }
        ]
      }
    },
    "/v1/totp/connect": {
      "post": {
        "tags": [
          "TOTP Controller"
        ],
        "summary": "Generate totp for user (UI)",
        "operationId": "generateTotp",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TotpResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/totp/activate": {
      "post": {
        "tags": [
          "TOTP Controller"
        ],
        "summary": "Activate totp for user (UI)",
        "operationId": "activateTotp",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TotpActivateReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/staff/users": {
      "get": {
        "tags": [
          "staff user ops"
        ],
        "summary": "List staff users",
        "operationId": "listStaffUsers",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": [
                "created_at,DESC"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryRespStaffUserResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      },
      "post": {
        "tags": [
          "staff user ops"
        ],
        "summary": "Create a staff user",
        "operationId": "createStaffUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StaffUserCreateByInvitationReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StaffUserResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/staff/users/{id}/avatar": {
      "post": {
        "tags": [
          "staff user ops"
        ],
        "summary": "Add or change your avatar",
        "operationId": "addOrUpdateAvatar-xl0UOqs",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "image"
                ],
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StaffUserResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/staff/users/invite": {
      "post": {
        "tags": [
          "staff user ops"
        ],
        "summary": "Send email invitations to staff users",
        "description": "Will generate a token ,that will be sent in emails (with URL {ui-host-url}/invite-staff-user?email=%s&token=%s) and an invitation object will be saved in DB",
        "operationId": "inviteStaffUsers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StaffUserInviteReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StaffUserInviteResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/staff/admin/partners/{partnerId}/billing/plan": {
      "get": {
        "tags": [
          "staff billing ops"
        ],
        "summary": "Get billing plan",
        "operationId": "getBillingPlan-8ull3iA",
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingPlanResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      },
      "post": {
        "tags": [
          "staff billing ops"
        ],
        "summary": "Add a plan",
        "operationId": "createBillingPlan-q-rKqvA",
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingPlanCreateReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingPlanResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/staff/admin/billing/invoices:calculate": {
      "post": {
        "tags": [
          "staff billing ops"
        ],
        "summary": "Forcefully calculate invoices",
        "description": "a debug-feature, not works for PROD and SANDBOX envs",
        "operationId": "calculateBillingInvoices",
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/recurring_payments": {
      "get": {
        "tags": [
          "recurring-payments"
        ],
        "summary": "List recurringPayments (API)",
        "operationId": "listRecurringPaymentsAPI-5ja3Hho",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": [
                "created_at,DESC"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryRespRecurringPaymentResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "api-key": []
          }
        ]
      },
      "post": {
        "tags": [
          "recurring-payments"
        ],
        "summary": "Create a new recurringPayment (API)",
        "operationId": "createRecurringPaymentAPI",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecurringPaymentCreateReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringPaymentResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "api-key": []
          }
        ]
      }
    },
    "/v1/products/{productId}/widgets": {
      "get": {
        "tags": [
          "widgets"
        ],
        "summary": "List widgets (UI)",
        "operationId": "listWidgetUi-NGY-c_A",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": [
                "created_at,DESC"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryRespWidgetResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      },
      "post": {
        "tags": [
          "widgets"
        ],
        "summary": "Create a widget (UI)",
        "operationId": "createWidgetUI-NGY-c_A",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "content"
                ],
                "type": "object",
                "properties": {
                  "content": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WidgetResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/products/{productId}/webhooks": {
      "get": {
        "tags": [
          "webhooks"
        ],
        "summary": "List webhooks (UI)",
        "operationId": "listWebhookUI-ykCCvl8",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "event",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "url",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": [
                "created_at,DESC"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryRespWebhookResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      },
      "post": {
        "tags": [
          "webhooks"
        ],
        "summary": "Create a new webhook (UI)",
        "operationId": "createWebhookUI-NGY-c_A",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookCreateReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/products/{productId}/users": {
      "get": {
        "tags": [
          "product users"
        ],
        "summary": "List product users (UI)",
        "operationId": "listProductUsersUI-atC0eHc",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "active",
            "in": "query",
            "description": "Is user active",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": [
                "created_at,DESC"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryRespProductUserResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      },
      "post": {
        "tags": [
          "product users"
        ],
        "summary": "Create a new product user (UI)",
        "operationId": "createProductUserUI-NGY-c_A",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductUserCreateReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductUserResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/products/{productId}/reward": {
      "get": {
        "tags": [
          "Rewards"
        ],
        "summary": "Get active reward by product id",
        "operationId": "getActiveReward-723iFlY",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RewardResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      },
      "post": {
        "tags": [
          "Rewards"
        ],
        "summary": "Create reward",
        "operationId": "createReward-NGY-c_A",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RewardCreateReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RewardResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      },
      "delete": {
        "tags": [
          "Rewards"
        ],
        "summary": "Delete reward",
        "operationId": "deleteReward-723iFlY",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      },
      "patch": {
        "tags": [
          "Rewards"
        ],
        "summary": "Update reward",
        "operationId": "updateReward-NGY-c_A",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RewardUpdateReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RewardResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/products/{productId}/recurring_payments": {
      "get": {
        "tags": [
          "recurring-payments"
        ],
        "summary": "List recurringPayments (UI)",
        "operationId": "listRecurringPaymentsUI-Hfz-Mes",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": [
                "created_at,DESC"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryRespRecurringPaymentResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      },
      "post": {
        "tags": [
          "recurring-payments"
        ],
        "summary": "Create a new recurring payment (UI)",
        "operationId": "createRecurringPaymentUI-NGY-c_A",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RecurringPaymentCreateReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringPaymentResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/products/{productId}/payments": {
      "post": {
        "tags": [
          "payments"
        ],
        "summary": "Create payment (REFUND from the Partner)",
        "operationId": "createOutgoingPaymentUI-NGY-c_A",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OutgoingPaymentCreateReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/products/{productId}/payments/search": {
      "post": {
        "tags": [
          "payments"
        ],
        "summary": "Search OpenSearch Domain Payments Index",
        "operationId": "searchPaymentsUI-NGY-c_A",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentSearchReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryRespPaymentResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/products/{productId}/linked_accounts": {
      "get": {
        "tags": [
          "linked account"
        ],
        "summary": "List Linked Accounts",
        "operationId": "listLinkedAccountsByProduct-DdED9jE",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "Product User Id that used to filter Linked accounts",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "product_owned",
            "in": "query",
            "description": "A flag to indicate that linked accounts should belong to product, if omitted linked accounts to product users are shown",
            "required": true,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": [
                "created_at,DESC"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryRespLinkedAccountResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      },
      "post": {
        "tags": [
          "linked account"
        ],
        "summary": "Create a new linked account for product",
        "operationId": "createLinkedAccountForProduct-exhqrHk",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LinkedAccountProductCreateReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LinkedAccountResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/products/{productId}/apikeys": {
      "get": {
        "tags": [
          "api key"
        ],
        "summary": "List Api Keys",
        "operationId": "listAPiKeys-NGY-c_A",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": [
                "created_at,DESC"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryRespApiKeyResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      },
      "post": {
        "tags": [
          "api key"
        ],
        "summary": "Create a new Api Key",
        "operationId": "createApiKey-723iFlY",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ApiKeyResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/payments": {
      "post": {
        "tags": [
          "payments"
        ],
        "summary": "Create payment (PAYMENT from Product User)",
        "operationId": "createIncomingPaymentAPI",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IncomingPaymentCreateReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "api-key": []
          }
        ]
      }
    },
    "/v1/payments/search": {
      "post": {
        "tags": [
          "payments"
        ],
        "summary": "Search OpenSearch Domain Payments Index",
        "operationId": "searchPaymentsAPI",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PaymentSearchReq"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryRespPaymentResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "api-key": []
          }
        ]
      }
    },
    "/v1/partners": {
      "get": {
        "tags": [
          "partner"
        ],
        "summary": "List partners",
        "operationId": "listPartners_1",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": [
                "created_at,DESC"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryRespPartnerResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      },
      "post": {
        "tags": [
          "partner"
        ],
        "summary": "Create a partner",
        "operationId": "createPartner",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PartnerCreateReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartnerResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/partner_users": {
      "get": {
        "tags": [
          "partner users"
        ],
        "summary": "List partner users",
        "operationId": "listPartnerUsers",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": [
                "created_at,DESC"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryRespPartnerUserResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      },
      "post": {
        "tags": [
          "partner users"
        ],
        "summary": "Create a partner user",
        "operationId": "createPartnerUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PartnerUserCreateByInvitationReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartnerUserResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/partner_users/{id}/avatar": {
      "post": {
        "tags": [
          "partner users"
        ],
        "summary": "Add or change your avatar",
        "operationId": "addOrUpdateAvatar-fMI2WyE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "image"
                ],
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartnerUserResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      },
      "delete": {
        "tags": [
          "partner users"
        ],
        "summary": "Delete your avatar",
        "operationId": "deleteAvatar-IZPvVIM",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartnerUserResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/partner_users/invite": {
      "post": {
        "tags": [
          "partner users"
        ],
        "summary": "Send email invitations to partner users",
        "description": "Will generate a token ,that will be sent in emails (with URL {ui-host-url}/invite-partner-user?email=%s&token=%s) and an invitation object will be saved in DB",
        "operationId": "invitePartnerUsers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PartnerUserInviteReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartnerUserInviteResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/otp": {
      "post": {
        "tags": [
          "otp code"
        ],
        "summary": "Generate OTP-code (will be sent by email)",
        "operationId": "createOtp",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NewOtpReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v1/opensearch/sync": {
      "post": {
        "tags": [
          "Reports"
        ],
        "summary": "Sync opensearch domain",
        "operationId": "sync",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OpenSearchSyncReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/linked_accounts": {
      "get": {
        "tags": [
          "linked account"
        ],
        "summary": "List Linked Accounts",
        "operationId": "listLinkedAccounts",
        "parameters": [
          {
            "name": "user_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": [
                "created_at,DESC"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryRespLinkedAccountResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "api-key": []
          }
        ]
      },
      "post": {
        "tags": [
          "linked account"
        ],
        "summary": "Create a Linked Account",
        "operationId": "createLinkedAccount",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LinkedAccountProductUserCreateReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LinkedAccountResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "api-key": []
          }
        ]
      }
    },
    "/v1/auth/totp_login": {
      "post": {
        "tags": [
          "authentication/otp-token"
        ],
        "summary": "Login with TOTP",
        "operationId": "totpLogin",
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TotpLoginReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtpLoginResp"
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/reset_password": {
      "post": {
        "tags": [
          "authentication/otp-token"
        ],
        "summary": "Reset password and send an email with reset-token",
        "operationId": "initiateResetPassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ResetPasswordReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v1/auth/register": {
      "post": {
        "tags": [
          "authentication/otp-token"
        ],
        "summary": "Register a new user",
        "operationId": "createUser",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResp"
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/otp_login": {
      "post": {
        "tags": [
          "authentication/otp-token"
        ],
        "summary": "Login with the help of OTP-token and OTP-code (from 'v1/otp')",
        "operationId": "otpLogin",
        "parameters": [
          {
            "name": "User-Agent",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OtpLoginReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OtpLoginResp"
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/login": {
      "post": {
        "tags": [
          "authentication/otp-token"
        ],
        "summary": "Login to get OTP-token",
        "operationId": "login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResp"
                }
              }
            }
          }
        }
      }
    },
    "/v1/auth/change_password": {
      "post": {
        "tags": [
          "authentication/otp-token"
        ],
        "summary": "Change password with the help of received reset-token",
        "operationId": "changePassword",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/v1/webhooks/{id}": {
      "get": {
        "tags": [
          "webhooks"
        ],
        "summary": "Get specific webhook (API)",
        "operationId": "getWebhookAPI-Lrf1Tn4",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "api-key": []
          }
        ]
      },
      "delete": {
        "tags": [
          "webhooks"
        ],
        "summary": "Delete specific webhook (API)",
        "operationId": "deleteWebhookAPI-Lrf1Tn4",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "api-key": []
          }
        ]
      },
      "patch": {
        "tags": [
          "webhooks"
        ],
        "summary": "Update specific webhook (API)",
        "operationId": "updateWebhookAPI-JghL6V4",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookUpdateReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "api-key": []
          }
        ]
      }
    },
    "/v1/users/{id}": {
      "get": {
        "tags": [
          "product users"
        ],
        "summary": "Get specific product user (API)",
        "operationId": "getProductUserAPI-BzYNe-g",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductUserResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "api-key": []
          }
        ]
      },
      "patch": {
        "tags": [
          "product users"
        ],
        "summary": "Update specific product user (API)",
        "operationId": "updateProductUserAPI-OaYjJic",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductUserUpdateReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductUserResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "api-key": []
          }
        ]
      }
    },
    "/v1/staff/admin/partners/{partnerId}/billing/profile": {
      "get": {
        "tags": [
          "staff billing ops"
        ],
        "summary": "Get specific profile",
        "operationId": "getBillingProfile-8ull3iA",
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      },
      "patch": {
        "tags": [
          "staff billing ops"
        ],
        "summary": "Update profile",
        "operationId": "updateBillingProfile-q-rKqvA",
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BillingProfileUpdateReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingProfileResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/products/{productId}/webhooks/{id}": {
      "get": {
        "tags": [
          "webhooks"
        ],
        "summary": "Get specific webhook (UI)",
        "operationId": "getWebhookUI-A8QcQ-Y",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      },
      "delete": {
        "tags": [
          "webhooks"
        ],
        "summary": "Delete specific webhook (UI)",
        "operationId": "deleteWebhookUI-A8QcQ-Y",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      },
      "patch": {
        "tags": [
          "webhooks"
        ],
        "summary": "Update specific webhook (UI)",
        "operationId": "updateWebhookUI-EP1GYHM",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WebhookUpdateReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WebhookResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/products/{productId}/users/{id}": {
      "get": {
        "tags": [
          "product users"
        ],
        "summary": "Get specific product user (UI)",
        "operationId": "getProductUserUI-1uni1bY",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductUserResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      },
      "patch": {
        "tags": [
          "product users"
        ],
        "summary": "Update specific product user (UI)",
        "operationId": "updateProductUserUI-sNEJjv0",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductUserUpdateReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductUserResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/partners/{id}": {
      "get": {
        "tags": [
          "partner"
        ],
        "summary": "Get specific partner",
        "operationId": "getPartner-8ull3iA_1",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartnerResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      },
      "patch": {
        "tags": [
          "partner"
        ],
        "summary": "Update specific partner",
        "operationId": "updatePartner-q-rKqvA",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PartnerUpdateReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartnerResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/partner_users/{id}": {
      "get": {
        "tags": [
          "partner users"
        ],
        "summary": "Get specific partner user",
        "operationId": "getPartnerUser-IZPvVIM",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartnerUserResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      },
      "delete": {
        "tags": [
          "partner users"
        ],
        "summary": "Delete specific partner user",
        "operationId": "deletePartnerUser-IZPvVIM",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      },
      "patch": {
        "tags": [
          "partner users"
        ],
        "summary": "Update specific partner user",
        "operationId": "updatePartnerUser-fMI2WyE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PartnerUserUpdateReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartnerUserResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/auth/partner_users/{id}/change_password": {
      "patch": {
        "tags": [
          "authentication/otp-token"
        ],
        "summary": "Change password for partner user without reset token",
        "operationId": "changePassword-fMI2WyE",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PartnerUserChangePasswordReq"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/version": {
      "get": {
        "tags": [
          "version"
        ],
        "operationId": "getVersion",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/v1/users/{id}/request_plaid_link_token": {
      "get": {
        "tags": [
          "product users"
        ],
        "summary": "Request a plaid link token (API)",
        "operationId": "requestPlaidLinkTokenAPI-BzYNe-g",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlaidLinkTokenResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "api-key": []
          }
        ]
      }
    },
    "/v1/user": {
      "get": {
        "tags": [
          "product users"
        ],
        "summary": "Get product user and linked account",
        "operationId": "getByEmail",
        "parameters": [
          {
            "name": "by",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "EMAIL"
              ]
            }
          },
          {
            "name": "value",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductUserWithLinkedAccountResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "api-key": []
          }
        ]
      }
    },
    "/v1/totp/status": {
      "get": {
        "tags": [
          "TOTP Controller"
        ],
        "summary": "Get totp status for user",
        "operationId": "getTotpStatus",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TotpStatusResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/staff/users/{id}": {
      "get": {
        "tags": [
          "staff user ops"
        ],
        "summary": "Get specific staff user",
        "operationId": "getStaffUser-WjroYjk",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StaffUserResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/staff/admin/partners": {
      "get": {
        "tags": [
          "staff admin ops"
        ],
        "summary": "List partners",
        "operationId": "listPartners",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": [
                "created_at,DESC"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryRespPartnerResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/staff/admin/partners/{partnerId}/users": {
      "get": {
        "tags": [
          "staff admin ops"
        ],
        "summary": "List partner users",
        "operationId": "listPartnerUsers-q-rKqvA",
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": [
                "created_at,DESC"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryRespPartnerUserResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/staff/admin/partners/{partnerId}/products": {
      "get": {
        "tags": [
          "staff admin ops"
        ],
        "summary": "List products",
        "operationId": "listProducts-q-rKqvA",
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": [
                "created_at,DESC"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryRespProductResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/staff/admin/partners/{partnerId}/products/{productId}/users": {
      "get": {
        "tags": [
          "staff admin ops"
        ],
        "summary": "List product users",
        "operationId": "listProductUsers-rTaaLQo",
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "active",
            "in": "query",
            "description": "Is user active",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": [
                "created_at,DESC"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryRespProductUserResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/staff/admin/partners/{partnerId}/products/{productId}/billing/operation_fees": {
      "get": {
        "tags": [
          "staff billing ops"
        ],
        "summary": "List operation fees",
        "operationId": "listBillingOperationFees-hButq0o",
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operation",
            "in": "query",
            "description": "Operation",
            "required": false,
            "schema": {
              "type": "string",
              "description": "operation types",
              "enum": [
                "ACH_STANDARD",
                "ACH_SAMEDAY",
                "KYC_ENHANCED",
                "KYC_BASIC"
              ]
            }
          },
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "example": "2000-10-31"
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "example": "2000-10-31"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": [
                "created_at,DESC"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryRespBillingOperationFeeResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/staff/admin/partners/{partnerId}/products/{productId}/billing/operation_fees/{id}": {
      "get": {
        "tags": [
          "staff billing ops"
        ],
        "summary": "Get specific operation fee",
        "operationId": "getBillingOperationFee",
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingOperationFeeResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/staff/admin/partners/{partnerId}/products/{id}": {
      "get": {
        "tags": [
          "staff admin ops"
        ],
        "summary": "Get specific product",
        "operationId": "getProduct-45YW-d8",
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/staff/admin/partners/{partnerId}/billing/invoices": {
      "get": {
        "tags": [
          "staff billing ops"
        ],
        "summary": "List invoices",
        "operationId": "listBillingInvoices-mfbEWSE",
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "year_from",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "month_from",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "year_to",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "month_to",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": [
                "created_at,DESC"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryRespBillingInvoiceResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/staff/admin/partners/{partnerId}/billing/invoices/{id}": {
      "get": {
        "tags": [
          "staff billing ops"
        ],
        "summary": "Get specific invoice",
        "operationId": "getBillingInvoice-_YRoNT4",
        "parameters": [
          {
            "name": "partnerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingInvoiceResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/staff/admin/partners/{id}": {
      "get": {
        "tags": [
          "staff admin ops"
        ],
        "summary": "Get specific partner",
        "operationId": "getPartner-8ull3iA",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PartnerResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/request_plaid_link_token": {
      "get": {
        "tags": [
          "plaid tokens"
        ],
        "summary": "Request a plaid link token",
        "operationId": "requestPlaidLinkToken",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlaidLinkTokenResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/recurring_payments/{id}": {
      "get": {
        "tags": [
          "recurring-payments"
        ],
        "summary": "Get specific recurringPayment (API)",
        "operationId": "getRecurringPaymentAPI-3erF2iM",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringPaymentResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "api-key": []
          }
        ]
      },
      "delete": {
        "tags": [
          "recurring-payments"
        ],
        "summary": "Delete specific recurring payment (API)",
        "operationId": "deleteRecurringPaymentAPI-3erF2iM",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "api-key": []
          }
        ]
      }
    },
    "/v1/products": {
      "get": {
        "tags": [
          "products"
        ],
        "summary": "Query products",
        "operationId": "listProducts",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": [
                "created_at,DESC"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryRespProductResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/products/{productId}/widgets/{id}": {
      "get": {
        "tags": [
          "widgets"
        ],
        "summary": "Get specific widget (UI)",
        "operationId": "getWidgetUi-SHzjbrY",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WidgetResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/products/{productId}/users/{productUserId}/reward_points": {
      "get": {
        "tags": [
          "Rewards"
        ],
        "summary": "Get reward points",
        "operationId": "getRewardPoints-1uni1bY",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productUserId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RewardPointTotalResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/products/{productId}/users/{productUserId}/cashback": {
      "get": {
        "tags": [
          "Rewards"
        ],
        "summary": "Get remaining cashbacks",
        "operationId": "getCashback-1uni1bY",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "productUserId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/RewardCashbackTotalResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/products/{productId}/users/{id}/request_plaid_link_token": {
      "get": {
        "tags": [
          "product users"
        ],
        "summary": "Request a plaid link token (UI)",
        "operationId": "requestPlaidLinkTokenUI-nk1DEH8",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PlaidLinkTokenResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/products/{productId}/users/search": {
      "get": {
        "tags": [
          "product users"
        ],
        "summary": "Search OpenSearch Domain Product Users Index",
        "operationId": "search",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "first_name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "last_name",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "email",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "default": 50
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductUserOpenSearchReqResp"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/products/{productId}/report/total": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Search total payments for opensearch domain",
        "operationId": "searchTotalPayments",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "interval",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SearchAmountResp"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/products/{productId}/report/redeemed_points": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Search total points earned",
        "operationId": "searchTotalPointsRedeemed",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "interval",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SearchAmountResp"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/products/{productId}/report/redeemed_cashbacks": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Search total redeemed cashbacks",
        "operationId": "searchTotalRedeemedCashbacks",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "interval",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SearchAmountResp"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/products/{productId}/report/points_earned": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Search total points earned",
        "operationId": "searchTotalPointsEarned",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "interval",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SearchAmountResp"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/products/{productId}/report/new_customers": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Search total new customers",
        "operationId": "searchTotalNewCustomers",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "interval",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SearchAmountResp"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/products/{productId}/report/disputes": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Search total payments for opensearch domain",
        "operationId": "searchChangeInRefunds",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "interval",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SearchAmountResp"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/products/{productId}/report/cashbacks_earned": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Search total cashbacks earned",
        "operationId": "searchTotalCashbacksEarned",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "interval",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SearchAmountResp"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/products/{productId}/report/average_amount": {
      "get": {
        "tags": [
          "Reports"
        ],
        "summary": "Search average for opensearch domain",
        "operationId": "searchAverage",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "interval",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SearchAmountResp"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/products/{productId}/recurring_payments/{id}": {
      "get": {
        "tags": [
          "recurring-payments"
        ],
        "summary": "Get specific recurringPayment (UI)",
        "operationId": "getRecurringPaymentUI-j_un1VY",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RecurringPaymentResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      },
      "delete": {
        "tags": [
          "recurring-payments"
        ],
        "summary": "Delete specific recurring payment (UI)",
        "operationId": "deleteRecurringPaymentUI-j_un1VY",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/products/{productId}/payments/{id}": {
      "get": {
        "tags": [
          "payments"
        ],
        "summary": "Get payment by ID",
        "operationId": "getPaymentUI-cKXCXZA",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/products/{productId}/payments/{id}/fees": {
      "get": {
        "tags": [
          "Payments fee"
        ],
        "summary": "Get payment fee by ID",
        "operationId": "getPaymentFee-YKnsSOU",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentFeeResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/products/{productId}/payment_fees": {
      "get": {
        "tags": [
          "Payments fee"
        ],
        "summary": "Get payment fees by ID",
        "operationId": "getPaymentFees-NGY-c_A",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": [
                "created_at,DESC"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryRespPaymentFeeResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/products/{productId}/linked_accounts/{id}": {
      "get": {
        "tags": [
          "linked account"
        ],
        "summary": "Get linked account for product",
        "operationId": "getLinkedAccountForProduct-GtFUIl8",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LinkedAccountResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      },
      "delete": {
        "tags": [
          "linked account"
        ],
        "summary": "Delete specific Linked Account for product",
        "operationId": "deleteLinkedAccountForProduct-GtFUIl8",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LinkedAccountResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/products/{id}": {
      "get": {
        "tags": [
          "products"
        ],
        "summary": "Get specific product",
        "operationId": "getProduct-723iFlY",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/payments/{id}": {
      "get": {
        "tags": [
          "payments"
        ],
        "summary": "Get payment by ID",
        "operationId": "getPaymentAPI-oIKwWMg",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaymentResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "api-key": []
          }
        ]
      }
    },
    "/v1/linked_accounts/{id}": {
      "get": {
        "tags": [
          "linked account"
        ],
        "summary": "Get Linked Account",
        "operationId": "getLinkedAccount-zEz5VaU",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LinkedAccountResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "api-key": []
          }
        ]
      },
      "delete": {
        "tags": [
          "linked account"
        ],
        "summary": "Delete specific Linked Account",
        "operationId": "deleteLinkedAccount-zEz5VaU",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "api-key": []
          }
        ]
      }
    },
    "/v1/billing/operation_fees": {
      "get": {
        "tags": [
          "billing"
        ],
        "summary": "List operation fees",
        "operationId": "listBillingOperationFees-II7JcoM",
        "parameters": [
          {
            "name": "product_id",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "operation",
            "in": "query",
            "description": "Operation",
            "required": false,
            "schema": {
              "type": "string",
              "description": "operation types",
              "enum": [
                "ACH_STANDARD",
                "ACH_SAMEDAY",
                "KYC_ENHANCED",
                "KYC_BASIC"
              ]
            }
          },
          {
            "name": "date_from",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "example": "2000-10-31"
          },
          {
            "name": "date_to",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date"
            },
            "example": "2000-10-31"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": [
                "created_at,DESC"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryRespBillingOperationFeeResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/billing/invoices": {
      "get": {
        "tags": [
          "billing"
        ],
        "summary": "List invoices",
        "operationId": "listBillingInvoices",
        "parameters": [
          {
            "name": "year_from",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "month_from",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "year_to",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "month_to",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Zero-based page index (0..N)",
            "required": false,
            "schema": {
              "minimum": 0,
              "type": "integer",
              "default": 0
            }
          },
          {
            "name": "size",
            "in": "query",
            "description": "The size of the page to be returned",
            "required": false,
            "schema": {
              "minimum": 1,
              "type": "integer",
              "default": 20
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sorting criteria in the format: property,(asc|desc). Default sort order is ascending. Multiple sort criteria are supported.",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "default": [
                "created_at,DESC"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryRespBillingInvoiceResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/billing/invoices/{id}": {
      "get": {
        "tags": [
          "billing"
        ],
        "summary": "Get specific invoice",
        "operationId": "getBillingInvoice-DTMw3PM",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingInvoiceResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/billing/invoices/current": {
      "get": {
        "tags": [
          "billing"
        ],
        "summary": "Get current invoice (for current month)",
        "operationId": "getCurrentBillingInvoice",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingInvoiceResp"
                }
              }
            }
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/auth/reset_password_tokens/{tokenId}/status": {
      "get": {
        "tags": [
          "authentication/otp-token"
        ],
        "summary": "Check if token is expired",
        "operationId": "tokenIsExpired",
        "parameters": [
          {
            "name": "tokenId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TokenExpiryResp"
                }
              }
            }
          }
        }
      }
    },
    "/v1/api_doc": {
      "get": {
        "tags": [
          "Api doc"
        ],
        "summary": "List the api docs",
        "operationId": "getApiDocs",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    },
    "/actuator": {
      "get": {
        "tags": [
          "Actuator"
        ],
        "summary": "Actuator root web endpoint",
        "operationId": "links",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/Link"
                    }
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/Link"
                    }
                  }
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": {
                    "type": "object",
                    "additionalProperties": {
                      "$ref": "#/components/schemas/Link"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/actuator/prometheus": {
      "get": {
        "tags": [
          "Actuator"
        ],
        "summary": "Actuator web endpoint 'prometheus'",
        "operationId": "prometheus",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain;version=0.0.4;charset=utf-8": {
                "schema": {
                  "type": "object"
                }
              },
              "application/openmetrics-text;version=1.0.0;charset=utf-8": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/actuator/metrics": {
      "get": {
        "tags": [
          "Actuator"
        ],
        "summary": "Actuator web endpoint 'metrics'",
        "operationId": "metrics",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/actuator/metrics/{requiredMetricName}": {
      "get": {
        "tags": [
          "Actuator"
        ],
        "summary": "Actuator web endpoint 'metrics-requiredMetricName'",
        "operationId": "metrics-requiredMetricName",
        "parameters": [
          {
            "name": "requiredMetricName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/actuator/info": {
      "get": {
        "tags": [
          "Actuator"
        ],
        "summary": "Actuator web endpoint 'info'",
        "operationId": "info",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/actuator/health": {
      "get": {
        "tags": [
          "Actuator"
        ],
        "summary": "Actuator web endpoint 'health'",
        "operationId": "health",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/actuator/health/**": {
      "get": {
        "tags": [
          "Actuator"
        ],
        "summary": "Actuator web endpoint 'health-path'",
        "operationId": "health-path",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/vnd.spring-boot.actuator.v3+json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/json": {
                "schema": {
                  "type": "object"
                }
              },
              "application/vnd.spring-boot.actuator.v2+json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    },
    "/v1/products/{productId}/apikeys/{id}": {
      "delete": {
        "tags": [
          "api key"
        ],
        "summary": "Delete an existing Api Key",
        "operationId": "deleteApiKey-J_C1JxQ",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    },
    "/v1/partner_users/invite/{id}": {
      "delete": {
        "tags": [
          "partner users"
        ],
        "summary": "Delete partner user invitation",
        "operationId": "deletePartnerUserInvitation-nXpEYy0",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        },
        "security": [
          {
            "jwt-token": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "WebhookCreateReq": {
        "required": [
          "event",
          "url"
        ],
        "type": "object",
        "properties": {
          "event": {
            "type": "string",
            "enum": [
              "account.update",
              "ach.update",
              "user.kyc.update",
              "payment.update"
            ]
          },
          "url": {
            "type": "string",
            "description": "url to be called, only http/https supported",
            "example": "https://site.com/notify"
          }
        }
      },
      "WebhookResp": {
        "required": [
          "created_at",
          "event",
          "id",
          "product_id",
          "status",
          "updated_at",
          "url"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "example": "2023-03-16T13:15:38.692846Z"
          },
          "updated_at": {
            "type": "string",
            "example": "2023-03-16T13:15:38.692846Z"
          },
          "product_id": {
            "type": "string"
          },
          "event": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "error": {
            "type": "string"
          }
        }
      },
      "ProductUserCreateReq": {
        "required": [
          "email",
          "first_name",
          "last_name"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "phone_country_code": {
            "type": "string",
            "enum": [
              "US",
              "CA"
            ]
          },
          "phone_number": {
            "type": "string"
          },
          "user_data": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Custom user's data"
            },
            "description": "Custom user's data"
          }
        }
      },
      "ProductUserResp": {
        "required": [
          "created_at",
          "email",
          "first_name",
          "id",
          "last_name",
          "updated_at"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "example": "2023-03-16T13:15:38.692846Z"
          },
          "updated_at": {
            "type": "string",
            "example": "2023-03-16T13:15:38.692846Z"
          },
          "email": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "phone_country_code": {
            "type": "string",
            "enum": [
              "US",
              "CA"
            ]
          },
          "phone_number": {
            "type": "string"
          },
          "user_data": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Custom user's data"
            },
            "description": "Custom user's data"
          },
          "external_id": {
            "type": "string"
          }
        }
      },
      "TotpResp": {
        "required": [
          "qrCodeUri",
          "secret"
        ],
        "type": "object",
        "properties": {
          "secret": {
            "type": "string"
          },
          "qrCodeUri": {
            "type": "string"
          }
        }
      },
      "TotpActivateReq": {
        "required": [
          "totp_code"
        ],
        "type": "object",
        "properties": {
          "totp_code": {
            "type": "string"
          }
        }
      },
      "StaffUserCreateByInvitationReq": {
        "required": [
          "confirm_password",
          "email",
          "legal_first_name",
          "legal_last_name",
          "password",
          "token"
        ],
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "the token that was sent in user's invitation"
          },
          "email": {
            "type": "string",
            "description": "the user's email"
          },
          "legal_first_name": {
            "type": "string"
          },
          "legal_middle_name": {
            "type": "string"
          },
          "legal_last_name": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "confirm_password": {
            "type": "string"
          }
        }
      },
      "StaffUserResp": {
        "required": [
          "created_at",
          "id",
          "legal_first_name",
          "legal_last_name",
          "updated_at",
          "user_id",
          "work_email"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "example": "2023-03-16T13:15:38.692846Z"
          },
          "updated_at": {
            "type": "string",
            "example": "2023-03-16T13:15:38.692846Z"
          },
          "user_id": {
            "type": "string"
          },
          "legal_first_name": {
            "type": "string"
          },
          "legal_last_name": {
            "type": "string"
          },
          "work_email": {
            "type": "string"
          },
          "avatar_image": {
            "type": "string",
            "format": "byte"
          }
        }
      },
      "StaffUserInviteReq": {
        "required": [
          "emails",
          "ui_host_url"
        ],
        "type": "object",
        "properties": {
          "ui_host_url": {
            "type": "string",
            "description": "UI App host URL"
          },
          "emails": {
            "type": "array",
            "description": "Emails to invite",
            "items": {
              "type": "string",
              "description": "Emails to invite"
            }
          }
        }
      },
      "StaffUserInviteResp": {
        "required": [
          "results"
        ],
        "type": "object",
        "properties": {
          "results": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "BillingPlanCreateReq": {
        "required": [
          "ach_sameday_fee",
          "ach_standard_fee",
          "kyc_basic_fee",
          "kyc_enhanced_fee",
          "plan_enterprise_fee",
          "plan_grow_fee"
        ],
        "type": "object",
        "properties": {
          "ach_standard_fee": {
            "type": "string",
            "description": "ACH (Standard) fee amount"
          },
          "ach_sameday_fee": {
            "type": "string",
            "description": "ACH (Same day) fee amount"
          },
          "kyc_basic_fee": {
            "type": "string",
            "description": "KYC (Basic) fee amount"
          },
          "kyc_enhanced_fee": {
            "type": "string",
            "description": "KYC (Enhanced) fee amount"
          },
          "plan_grow_fee": {
            "type": "string",
            "description": "Plans (Grow) fee amount"
          },
          "plan_enterprise_fee": {
            "type": "string",
            "description": "Plans (Enterprise) fee amount"
          }
        }
      },
      "BillingPlanResp": {
        "required": [
          "created_at",
          "id",
          "updated_at",
          "version"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "example": "2023-03-16T13:15:38.692846Z"
          },
          "updated_at": {
            "type": "string",
            "example": "2023-03-16T13:15:38.692846Z"
          },
          "partner_id": {
            "type": "string"
          },
          "ach_standard_fee": {
            "type": "string",
            "description": "ACH (Standard) fee amount"
          },
          "ach_sameday_fee": {
            "type": "string",
            "description": "ACH (Same day) fee amount"
          },
          "kyc_basic_fee": {
            "type": "string",
            "description": "KYC (Basic) fee amount"
          },
          "kyc_enhanced_fee": {
            "type": "string",
            "description": "KYC (Enhanced) fee amount"
          },
          "plan_grow_fee": {
            "type": "string",
            "description": "Plans (Grow) fee amount"
          },
          "plan_enterprise_fee": {
            "type": "string",
            "description": "Plans (Enterprise) fee amount"
          },
          "version": {
            "type": "integer",
            "format": "int32"
          },
          "activity_end": {
            "type": "string"
          }
        }
      },
      "RecurringPaymentCreateReq": {
        "required": [
          "amount",
          "description",
          "interval",
          "linked_account_id",
          "product_user_id",
          "speed"
        ],
        "type": "object",
        "properties": {
          "product_user_id": {
            "type": "string"
          },
          "linked_account_id": {
            "type": "string"
          },
          "speed": {
            "type": "string"
          },
          "amount": {
            "type": "string"
          },
          "interval": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "RecurringPaymentResp": {
        "required": [
          "amount",
          "created_at",
          "description",
          "disabled",
          "id",
          "interval",
          "product_id",
          "product_user_id",
          "speed",
          "updated_at"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "example": "2023-03-16T13:15:38.692846Z"
          },
          "updated_at": {
            "type": "string",
            "example": "2023-03-16T13:15:38.692846Z"
          },
          "product_id": {
            "type": "string"
          },
          "product_user_id": {
            "type": "string"
          },
          "linked_account_id": {
            "type": "string"
          },
          "speed": {
            "type": "string"
          },
          "amount": {
            "type": "string"
          },
          "interval": {
            "type": "string"
          },
          "started_at": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "disabled": {
            "type": "boolean"
          }
        }
      },
      "WidgetResp": {
        "required": [
          "active",
          "created_at",
          "id",
          "partner_id",
          "product_id",
          "published",
          "updated_at",
          "uploaded_by"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string"
          },
          "updated_at": {
            "type": "string"
          },
          "product_id": {
            "type": "string"
          },
          "partner_id": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "uploaded_by": {
            "type": "string"
          },
          "published": {
            "type": "boolean"
          },
          "published_at": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        }
      },
      "RewardCreateReq": {
        "required": [
          "reward_type"
        ],
        "type": "object",
        "properties": {
          "reward_type": {
            "type": "string",
            "enum": [
              "INSTANT_DISCOUNT",
              "CASHBACK",
              "POINT_SYSTEM"
            ]
          },
          "cashback_validity_days": {
            "type": "integer",
            "format": "int32"
          },
          "discount_percentage": {
            "type": "string"
          },
          "point_system_earn_ratio": {
            "type": "string"
          },
          "point_system_spend_ratio": {
            "type": "string"
          },
          "point_system_intro_offer": {
            "type": "boolean"
          },
          "point_system_intro_offer_type": {
            "type": "string",
            "enum": [
              "EARN_FOR_FIRST_PURCHASE",
              "MULTIPLY_FOR_FIRST_PURCHASE"
            ]
          },
          "point_system_intro_offer_param": {
            "type": "string"
          },
          "point_system_intro_offer_tnx_limit": {
            "type": "string"
          }
        }
      },
      "RewardResp": {
        "required": [
          "active",
          "created_at",
          "id",
          "product_id",
          "reward_type",
          "updated_at"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "example": "2023-03-16T13:15:38.692846Z"
          },
          "updated_at": {
            "type": "string",
            "example": "2023-03-16T13:15:38.692846Z"
          },
          "product_id": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "reward_type": {
            "type": "string"
          },
          "cashback_validity_days": {
            "type": "integer",
            "format": "int32"
          },
          "discount_percentage": {
            "type": "number"
          },
          "point_system_earn_ratio": {
            "type": "string"
          },
          "point_system_spend_ratio": {
            "type": "string"
          },
          "point_system_intro_offer": {
            "type": "boolean"
          },
          "point_system_intro_offer_type": {
            "type": "string"
          },
          "point_system_intro_offer_param": {
            "type": "string"
          },
          "point_system_intro_offer_tnx_limit": {
            "type": "string"
          }
        }
      },
      "OutgoingPaymentCreateReq": {
        "required": [
          "amount",
          "description",
          "in_payment_id",
          "linked_account_id",
          "product_user_id",
          "speed"
        ],
        "type": "object",
        "properties": {
          "linked_account_id": {
            "type": "string"
          },
          "product_user_id": {
            "type": "string"
          },
          "speed": {
            "type": "string"
          },
          "amount": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "in_payment_id": {
            "type": "string"
          }
        }
      },
      "PaymentResp": {
        "required": [
          "amount",
          "created_at",
          "description",
          "id",
          "linked_account_id",
          "speed",
          "status",
          "updated_at",
          "user"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "example": "2023-03-16T13:15:38.692846Z"
          },
          "updated_at": {
            "type": "string",
            "example": "2023-03-16T13:15:38.692846Z"
          },
          "user": {
            "$ref": "#/components/schemas/ProductUserResp"
          },
          "linked_account_id": {
            "type": "string"
          },
          "speed": {
            "type": "string"
          },
          "amount": {
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "OpenSearchPaginateReq": {
        "type": "object",
        "properties": {
          "sort": {
            "$ref": "#/components/schemas/OpenSearchSort"
          },
          "page_number": {
            "type": "integer",
            "format": "int32"
          },
          "size": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "OpenSearchSort": {
        "type": "object",
        "properties": {
          "field": {
            "type": "string"
          },
          "direction": {
            "type": "string",
            "enum": [
              "ASC",
              "DESC"
            ]
          }
        }
      },
      "PaymentSearchReq": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          },
          "speed": {
            "type": "string",
            "enum": [
              "STANDARD",
              "ECONOMY",
              "EXPRESS"
            ]
          },
          "direction": {
            "type": "string",
            "enum": [
              "IN",
              "OUT"
            ]
          },
          "description": {
            "type": "string"
          },
          "status": {
            "type": "string",
            "enum": [
              "INITIATED",
              "VALIDATED",
              "AUTHORIZED",
              "ERROR",
              "PROCESSED",
              "CANCELLED"
            ]
          },
          "type": {
            "type": "string",
            "enum": [
              "PAYMENT",
              "WITHDRAW",
              "REFUND"
            ]
          },
          "linked_account_id": {
            "type": "string"
          },
          "all": {
            "type": "string",
            "description": "Searches all fields for a value"
          },
          "amount": {
            "type": "string"
          },
          "date_from": {
            "type": "string",
            "format": "date",
            "example": "2000-10-31"
          },
          "date_to": {
            "type": "string",
            "format": "date",
            "example": "2000-10-31"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "paginate": {
            "$ref": "#/components/schemas/OpenSearchPaginateReq"
          }
        }
      },
      "QueryRespPaymentResp": {
        "required": [
          "data",
          "metadata"
        ],
        "type": "object",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentResp"
            }
          }
        }
      },
      "metadata": {
        "required": [
          "current_page",
          "number_of_elements",
          "page_size",
          "total_elements",
          "total_pages"
        ],
        "type": "object",
        "properties": {
          "number_of_elements": {
            "type": "integer",
            "format": "int32"
          },
          "current_page": {
            "type": "integer",
            "format": "int32"
          },
          "page_size": {
            "type": "integer",
            "format": "int32"
          },
          "total_pages": {
            "type": "integer",
            "format": "int32"
          },
          "total_elements": {
            "type": "integer",
            "format": "int64"
          },
          "sort_orders": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "LinkedAccountProductCreateReq": {
        "required": [
          "plaid_public_token"
        ],
        "type": "object",
        "properties": {
          "plaid_public_token": {
            "type": "string"
          }
        }
      },
      "LinkedAccountResp": {
        "required": [
          "created_at",
          "id",
          "updated_at",
          "user_id"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "example": "2023-03-16T13:15:38.692846Z"
          },
          "updated_at": {
            "type": "string",
            "example": "2023-03-16T13:15:38.692846Z"
          },
          "user_id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "account_name": {
            "type": "string"
          },
          "account_number": {
            "type": "string"
          },
          "routing_number": {
            "type": "string"
          },
          "account_type": {
            "type": "string"
          },
          "bank_name": {
            "type": "string"
          }
        }
      },
      "ApiKeyResp": {
        "required": [
          "api_key",
          "created_at",
          "id",
          "rights",
          "updated_at"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "example": "2023-03-16T13:15:38.692846Z"
          },
          "updated_at": {
            "type": "string",
            "example": "2023-03-16T13:15:38.692846Z"
          },
          "api_key": {
            "type": "string"
          },
          "partner_id": {
            "type": "string"
          },
          "product_id": {
            "type": "string"
          },
          "rights": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "IncomingPaymentCreateReq": {
        "required": [
          "amount",
          "description",
          "linked_account_id",
          "speed",
          "user_id"
        ],
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string"
          },
          "linked_account_id": {
            "type": "string"
          },
          "speed": {
            "type": "string",
            "enum": [
              "STANDARD",
              "ECONOMY",
              "EXPRESS"
            ]
          },
          "amount": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "cashback_amount": {
            "type": "string"
          },
          "reward_points_amount": {
            "type": "string"
          }
        }
      },
      "Address": {
        "required": [
          "city",
          "country",
          "postal_code",
          "state",
          "street"
        ],
        "type": "object",
        "properties": {
          "unit_number": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "postal_code": {
            "type": "string"
          },
          "country": {
            "type": "string",
            "description": "Country Code.",
            "enum": [
              "USA",
              "CANADA"
            ]
          }
        }
      },
      "PartnerCreateReq": {
        "required": [
          "business_category",
          "business_id",
          "business_id_type",
          "description",
          "idempotency_id",
          "incorporation_country_iso_code",
          "incorporation_date",
          "incorporation_state_province_code",
          "legal_business_name",
          "legal_structure",
          "owner",
          "phone_country_code",
          "phone_number",
          "physical_address",
          "terms_accept_agreement_and_policy",
          "terms_brokerage_or_exchange",
          "terms_lynk_statement_read",
          "terms_own_public_company",
          "terms_provided_correct_info",
          "url"
        ],
        "type": "object",
        "properties": {
          "legal_business_name": {
            "type": "string"
          },
          "business_id_type": {
            "type": "string",
            "enum": [
              "EIN"
            ]
          },
          "business_id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "incorporation_date": {
            "type": "string"
          },
          "incorporation_country_iso_code": {
            "type": "string",
            "enum": [
              "US"
            ]
          },
          "incorporation_state_province_code": {
            "type": "string"
          },
          "legal_structure": {
            "type": "string",
            "enum": [
              "C_CORPORATION",
              "S_CORPORATION",
              "LLC",
              "PARTNERSHIP",
              "SOLE_PROPRIETORSHIP",
              "NON_PROFIT"
            ]
          },
          "business_category": {
            "type": "string"
          },
          "phone_country_code": {
            "type": "string",
            "enum": [
              "US",
              "CA"
            ]
          },
          "phone_number": {
            "type": "string"
          },
          "url": {
            "type": "string",
            "description": "url to company site",
            "example": "https://site.com"
          },
          "physical_address": {
            "$ref": "#/components/schemas/Address"
          },
          "mailing_address": {
            "$ref": "#/components/schemas/Address"
          },
          "owner": {
            "$ref": "#/components/schemas/PartnerUserWithPersonalDetailCreateReq"
          },
          "terms_brokerage_or_exchange": {
            "type": "boolean"
          },
          "terms_own_public_company": {
            "type": "boolean"
          },
          "terms_lynk_statement_read": {
            "type": "boolean"
          },
          "terms_accept_agreement_and_policy": {
            "type": "boolean"
          },
          "terms_provided_correct_info": {
            "type": "boolean"
          },
          "idempotency_id": {
            "type": "string",
            "description": "An unique ID for each request"
          }
        }
      },
      "PartnerUserWithPersonalDetailCreateReq": {
        "required": [
          "citizenship_country_iso_code",
          "date_of_birth",
          "gender",
          "legal_first_name",
          "legal_last_name",
          "national_id",
          "national_id_type",
          "phone_country_code",
          "phone_number",
          "physical_address",
          "relationship_to_company"
        ],
        "type": "object",
        "properties": {
          "legal_first_name": {
            "type": "string"
          },
          "legal_last_name": {
            "type": "string"
          },
          "national_id_type": {
            "type": "string",
            "enum": [
              "SOCIAL_SECURITY_NUMBER",
              "SOCIAL_INSURANCE_NUMBER"
            ]
          },
          "national_id": {
            "type": "string"
          },
          "citizenship_country_iso_code": {
            "type": "string",
            "enum": [
              "US",
              "CA"
            ]
          },
          "date_of_birth": {
            "type": "string",
            "format": "date",
            "example": "2000-10-31"
          },
          "phone_country_code": {
            "type": "string",
            "enum": [
              "US",
              "CA"
            ]
          },
          "phone_number": {
            "type": "string"
          },
          "gender": {
            "type": "string",
            "enum": [
              "M",
              "F"
            ]
          },
          "relationship_to_company": {
            "type": "string"
          },
          "physical_address": {
            "$ref": "#/components/schemas/Address"
          },
          "mailing_address": {
            "$ref": "#/components/schemas/Address"
          },
          "passport_number": {
            "type": "string"
          },
          "passport_country_code": {
            "type": "string",
            "enum": [
              "US",
              "CA"
            ]
          }
        }
      },
      "PartnerResp": {
        "required": [
          "category",
          "created_at",
          "description",
          "id",
          "incorporation_country_iso_code",
          "incorporation_date",
          "incorporation_state_province_code",
          "legal_structure",
          "phone_country_code",
          "phone_number",
          "physical_address",
          "updated_at",
          "url"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "example": "2023-03-16T13:15:38.692846Z"
          },
          "updated_at": {
            "type": "string",
            "example": "2023-03-16T13:15:38.692846Z"
          },
          "legal_business_name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "incorporation_date": {
            "type": "string"
          },
          "incorporation_country_iso_code": {
            "type": "string"
          },
          "incorporation_state_province_code": {
            "type": "string"
          },
          "legal_structure": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "phone_country_code": {
            "type": "string"
          },
          "phone_number": {
            "type": "string"
          },
          "url": {
            "type": "string"
          },
          "physical_address": {
            "$ref": "#/components/schemas/Address"
          },
          "mailing_address": {
            "$ref": "#/components/schemas/Address"
          },
          "verification_status": {
            "type": "string"
          },
          "application_data_validated": {
            "type": "boolean"
          }
        }
      },
      "PartnerUserCreateByInvitationReq": {
        "required": [
          "confirm_password",
          "email",
          "legal_first_name",
          "legal_last_name",
          "password",
          "token"
        ],
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "the token that was sent in user's invitation"
          },
          "email": {
            "type": "string",
            "description": "the user's email"
          },
          "legal_first_name": {
            "type": "string"
          },
          "legal_last_name": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "confirm_password": {
            "type": "string"
          }
        }
      },
      "PartnerUserResp": {
        "required": [
          "created_at",
          "id",
          "legal_first_name",
          "legal_last_name",
          "owner",
          "partner_id",
          "phone_country_code",
          "phone_number",
          "relationship_to_company",
          "role",
          "updated_at",
          "user_id",
          "work_email"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "example": "2023-03-16T13:15:38.692846Z"
          },
          "updated_at": {
            "type": "string",
            "example": "2023-03-16T13:15:38.692846Z"
          },
          "owner": {
            "type": "boolean"
          },
          "phone_country_code": {
            "type": "string"
          },
          "phone_number": {
            "type": "string"
          },
          "relationship_to_company": {
            "type": "string"
          },
          "partner_id": {
            "type": "string"
          },
          "user_id": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "legal_first_name": {
            "type": "string"
          },
          "legal_last_name": {
            "type": "string"
          },
          "work_email": {
            "type": "string"
          },
          "avatar_image": {
            "type": "string",
            "format": "byte"
          }
        }
      },
      "PartnerUserInviteReq": {
        "required": [
          "emails",
          "role",
          "ui_host_url"
        ],
        "type": "object",
        "properties": {
          "ui_host_url": {
            "type": "string",
            "description": "UI App host URL"
          },
          "role": {
            "type": "string"
          },
          "emails": {
            "type": "array",
            "description": "Emails to invite",
            "items": {
              "type": "string",
              "description": "Emails to invite"
            }
          }
        }
      },
      "PartnerUserInviteResp": {
        "required": [
          "results"
        ],
        "type": "object",
        "properties": {
          "results": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "NewOtpReq": {
        "required": [
          "email",
          "type"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "REGISTER",
              "LOGIN"
            ]
          }
        }
      },
      "OpenSearchSyncReq": {
        "type": "object",
        "properties": {
          "index": {
            "type": "string"
          }
        }
      },
      "LinkedAccountProductUserCreateReq": {
        "required": [
          "plaid_public_token",
          "user_id"
        ],
        "type": "object",
        "properties": {
          "user_id": {
            "type": "string"
          },
          "plaid_public_token": {
            "type": "string"
          }
        }
      },
      "TotpLoginReq": {
        "required": [
          "otp_token",
          "totp_code"
        ],
        "type": "object",
        "properties": {
          "otp_token": {
            "type": "string"
          },
          "totp_code": {
            "type": "string"
          }
        }
      },
      "OtpLoginResp": {
        "required": [
          "access_token",
          "expires_at",
          "first_name",
          "last_name",
          "user_email",
          "user_id"
        ],
        "type": "object",
        "properties": {
          "access_token": {
            "type": "string"
          },
          "expires_at": {
            "type": "integer",
            "format": "int64"
          },
          "user_id": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "user_email": {
            "type": "string"
          },
          "partner_id": {
            "type": "string"
          },
          "partner_name": {
            "type": "string"
          },
          "partner_user_id": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "staff_user_id": {
            "type": "string"
          }
        }
      },
      "ResetPasswordReq": {
        "required": [
          "email",
          "ui_host_url"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "ui_host_url": {
            "type": "string",
            "description": "UI App host URL"
          }
        }
      },
      "UserCreateReq": {
        "required": [
          "confirm_password",
          "legal_first_name",
          "legal_last_name",
          "password",
          "work_email"
        ],
        "type": "object",
        "properties": {
          "legal_first_name": {
            "type": "string"
          },
          "legal_middle_name": {
            "type": "string"
          },
          "legal_last_name": {
            "type": "string"
          },
          "work_email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "confirm_password": {
            "type": "string"
          }
        }
      },
      "LoginResp": {
        "required": [
          "otp_token",
          "totp_enabled"
        ],
        "type": "object",
        "properties": {
          "otp_token": {
            "type": "string"
          },
          "totp_enabled": {
            "type": "boolean"
          }
        }
      },
      "OtpLoginReq": {
        "required": [
          "one_time_password",
          "otp_token",
          "type"
        ],
        "type": "object",
        "properties": {
          "otp_token": {
            "type": "string"
          },
          "one_time_password": {
            "type": "string"
          },
          "type": {
            "type": "string",
            "enum": [
              "REGISTER",
              "LOGIN"
            ]
          }
        }
      },
      "LoginReq": {
        "required": [
          "email",
          "password"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "ChangePasswordReq": {
        "required": [
          "confirm_new_password",
          "email",
          "new_password",
          "token"
        ],
        "type": "object",
        "properties": {
          "email": {
            "type": "string"
          },
          "token": {
            "type": "string"
          },
          "new_password": {
            "type": "string"
          },
          "confirm_new_password": {
            "type": "string"
          }
        }
      },
      "WebhookUpdateReq": {
        "required": [
          "status",
          "url"
        ],
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": [
              "enabled",
              "disabled"
            ]
          },
          "url": {
            "type": "string",
            "description": "url to be called, only http/https supported",
            "example": "https://site.com/notify"
          }
        }
      },
      "ProductUserUpdateReq": {
        "type": "object",
        "properties": {
          "active": {
            "type": "boolean",
            "description": "User activity 'flag'. Can be set to 'false' only, without reversing it to 'true' again."
          },
          "email": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "user_data": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Custom user's data"
            },
            "description": "Custom user's data"
          }
        }
      },
      "BillingProfileUpdateReq": {
        "required": [
          "start_billing_date"
        ],
        "type": "object",
        "properties": {
          "start_billing_date": {
            "type": "string",
            "format": "date",
            "example": "2000-10-31"
          }
        }
      },
      "BillingProfileResp": {
        "required": [
          "created_at",
          "id",
          "partner_id",
          "start_billing_date",
          "updated_at"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "example": "2023-03-16T13:15:38.692846Z"
          },
          "updated_at": {
            "type": "string",
            "example": "2023-03-16T13:15:38.692846Z"
          },
          "partner_id": {
            "type": "string"
          },
          "start_billing_date": {
            "type": "string"
          }
        }
      },
      "RewardUpdateReq": {
        "type": "object",
        "properties": {
          "reward_type": {
            "type": "string",
            "enum": [
              "INSTANT_DISCOUNT",
              "CASHBACK",
              "POINT_SYSTEM"
            ]
          },
          "cashback_validity_days": {
            "type": "integer",
            "format": "int32"
          },
          "discount_percentage": {
            "type": "string"
          },
          "point_system_earn_ratio": {
            "type": "string"
          },
          "point_system_spend_ratio": {
            "type": "string"
          },
          "point_system_intro_offer": {
            "type": "boolean"
          },
          "point_system_intro_offer_type": {
            "type": "string",
            "enum": [
              "EARN_FOR_FIRST_PURCHASE",
              "MULTIPLY_FOR_FIRST_PURCHASE"
            ]
          },
          "point_system_intro_offer_param": {
            "type": "string"
          },
          "point_system_intro_offer_tnx_limit": {
            "type": "string"
          }
        }
      },
      "PartnerUpdateReq": {
        "required": [
          "mailing_address",
          "phone_country_code",
          "physical_address",
          "url"
        ],
        "type": "object",
        "properties": {
          "phone_country_code": {
            "type": "string",
            "enum": [
              "US",
              "CA"
            ]
          },
          "phone_number": {
            "type": "string"
          },
          "url": {
            "type": "string",
            "description": "url to company site",
            "example": "https://site.com"
          },
          "physical_address": {
            "$ref": "#/components/schemas/Address"
          },
          "mailing_address": {
            "$ref": "#/components/schemas/Address"
          }
        }
      },
      "PartnerUserUpdateReq": {
        "type": "object",
        "properties": {
          "legal_first_name": {
            "type": "string"
          },
          "legal_last_name": {
            "type": "string"
          },
          "legal_middle_name": {
            "type": "string"
          },
          "role": {
            "type": "string",
            "enum": [
              "ADMIN",
              "READ_ONLY"
            ]
          }
        }
      },
      "PartnerUserChangePasswordReq": {
        "required": [
          "confirm_new_password",
          "current_password",
          "new_password"
        ],
        "type": "object",
        "properties": {
          "current_password": {
            "type": "string"
          },
          "new_password": {
            "type": "string"
          },
          "confirm_new_password": {
            "type": "string"
          }
        }
      },
      "QueryRespWebhookResp": {
        "required": [
          "data",
          "metadata"
        ],
        "type": "object",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WebhookResp"
            }
          }
        }
      },
      "QueryRespProductUserResp": {
        "required": [
          "data",
          "metadata"
        ],
        "type": "object",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductUserResp"
            }
          }
        }
      },
      "PlaidLinkTokenResp": {
        "required": [
          "plaid_link_token"
        ],
        "type": "object",
        "properties": {
          "plaid_link_token": {
            "type": "string"
          }
        }
      },
      "ProductUserWithLinkedAccountResp": {
        "required": [
          "email",
          "first_name",
          "last_name",
          "product_user_id"
        ],
        "type": "object",
        "properties": {
          "product_user_id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "phone_country_code": {
            "type": "string",
            "enum": [
              "US",
              "CA"
            ]
          },
          "phone_number": {
            "type": "string"
          },
          "user_data": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "description": "Custom user's data"
            },
            "description": "Custom user's data"
          },
          "external_id": {
            "type": "string"
          },
          "linked_account_id": {
            "type": "string"
          }
        }
      },
      "TotpStatusResp": {
        "required": [
          "enabled"
        ],
        "type": "object",
        "properties": {
          "enabled": {
            "type": "boolean"
          }
        }
      },
      "QueryRespStaffUserResp": {
        "required": [
          "data",
          "metadata"
        ],
        "type": "object",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StaffUserResp"
            }
          }
        }
      },
      "QueryRespPartnerResp": {
        "required": [
          "data",
          "metadata"
        ],
        "type": "object",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PartnerResp"
            }
          }
        }
      },
      "QueryRespPartnerUserResp": {
        "required": [
          "data",
          "metadata"
        ],
        "type": "object",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PartnerUserResp"
            }
          }
        }
      },
      "ProductResp": {
        "required": [
          "created_at",
          "description",
          "id",
          "partner_id",
          "plan",
          "status",
          "updated_at"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "example": "2023-03-16T13:15:38.692846Z"
          },
          "updated_at": {
            "type": "string",
            "example": "2023-03-16T13:15:38.692846Z"
          },
          "name": {
            "type": "string"
          },
          "plan": {
            "type": "string",
            "example": "STARTER",
            "enum": [
              "STARTER",
              "GROW",
              "ENTERPRISE"
            ]
          },
          "partner_id": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "QueryRespProductResp": {
        "required": [
          "data",
          "metadata"
        ],
        "type": "object",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ProductResp"
            }
          }
        }
      },
      "BillingOperationFeeResp": {
        "required": [
          "billed_at",
          "created_at",
          "id",
          "operation",
          "partner_id",
          "product_id",
          "updated_at"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "example": "2023-03-16T13:15:38.692846Z"
          },
          "updated_at": {
            "type": "string",
            "example": "2023-03-16T13:15:38.692846Z"
          },
          "partner_id": {
            "type": "string"
          },
          "product_id": {
            "type": "string"
          },
          "billed_at": {
            "type": "string"
          },
          "operation": {
            "type": "string"
          },
          "operation_id": {
            "type": "string"
          },
          "fee": {
            "type": "string"
          }
        }
      },
      "QueryRespBillingOperationFeeResp": {
        "required": [
          "data",
          "metadata"
        ],
        "type": "object",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BillingOperationFeeResp"
            }
          }
        }
      },
      "BillingInvoiceResp": {
        "required": [
          "ach_sameday_count",
          "ach_standard_count",
          "ach_standard_fee",
          "billed_at",
          "created_at",
          "id",
          "key_basic_count",
          "key_basic_fee",
          "key_enhanced_count",
          "month",
          "partner_id",
          "updated_at",
          "year"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "example": "2023-03-16T13:15:38.692846Z"
          },
          "updated_at": {
            "type": "string",
            "example": "2023-03-16T13:15:38.692846Z"
          },
          "partner_id": {
            "type": "string"
          },
          "billed_at": {
            "type": "string"
          },
          "currency": {
            "type": "string"
          },
          "monthly_saas": {
            "type": "string"
          },
          "ach_standard_count": {
            "type": "integer",
            "format": "int32"
          },
          "ach_standard_fee": {
            "type": "string"
          },
          "ach_sameday_count": {
            "type": "integer",
            "format": "int32"
          },
          "ach_sameday_fee": {
            "type": "string"
          },
          "key_basic_count": {
            "type": "integer",
            "format": "int32"
          },
          "key_basic_fee": {
            "type": "number"
          },
          "key_enhanced_count": {
            "type": "integer",
            "format": "int32"
          },
          "key_enhanced_fee": {
            "type": "number"
          },
          "year": {
            "type": "integer",
            "format": "int32"
          },
          "month": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "QueryRespBillingInvoiceResp": {
        "required": [
          "data",
          "metadata"
        ],
        "type": "object",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/BillingInvoiceResp"
            }
          }
        }
      },
      "QueryRespRecurringPaymentResp": {
        "required": [
          "data",
          "metadata"
        ],
        "type": "object",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/RecurringPaymentResp"
            }
          }
        }
      },
      "QueryRespWidgetResp": {
        "required": [
          "data",
          "metadata"
        ],
        "type": "object",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/WidgetResp"
            }
          }
        }
      },
      "RewardPointTotalResp": {
        "required": [
          "reward_points_amount"
        ],
        "type": "object",
        "properties": {
          "reward_points_amount": {
            "type": "number"
          }
        }
      },
      "RewardCashbackTotalResp": {
        "required": [
          "cashback_amount"
        ],
        "type": "object",
        "properties": {
          "cashback_amount": {
            "type": "number"
          }
        }
      },
      "ProductUserOpenSearchReqResp": {
        "required": [
          "created_at",
          "email",
          "first_name",
          "id",
          "last_name",
          "product_id",
          "updated_at"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "product_id": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "first_name": {
            "type": "string"
          },
          "last_name": {
            "type": "string"
          },
          "phone_country_code": {
            "type": "string"
          },
          "phone_number": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "external_id": {
            "type": "string"
          },
          "intro_offer_used": {
            "type": "boolean"
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          },
          "updated_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "SearchAmountResp": {
        "required": [
          "amount",
          "time_span"
        ],
        "type": "object",
        "properties": {
          "amount": {
            "type": "string"
          },
          "time_span": {
            "type": "string"
          }
        }
      },
      "PaymentFeeResp": {
        "required": [
          "amount",
          "created_at",
          "destination_type",
          "id",
          "payment_id",
          "product_id",
          "type",
          "updated_at"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "created_at": {
            "type": "string",
            "example": "2023-03-16T13:15:38.692846Z"
          },
          "updated_at": {
            "type": "string",
            "example": "2023-03-16T13:15:38.692846Z"
          },
          "type": {
            "type": "string"
          },
          "destination_type": {
            "type": "string"
          },
          "amount": {
            "type": "string"
          },
          "product_id": {
            "type": "string"
          },
          "payment_id": {
            "type": "string"
          }
        }
      },
      "QueryRespPaymentFeeResp": {
        "required": [
          "data",
          "metadata"
        ],
        "type": "object",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentFeeResp"
            }
          }
        }
      },
      "QueryRespLinkedAccountResp": {
        "required": [
          "data",
          "metadata"
        ],
        "type": "object",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LinkedAccountResp"
            }
          }
        }
      },
      "QueryRespApiKeyResp": {
        "required": [
          "data",
          "metadata"
        ],
        "type": "object",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/metadata"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ApiKeyResp"
            }
          }
        }
      },
      "TokenExpiryResp": {
        "required": [
          "expired"
        ],
        "type": "object",
        "properties": {
          "expired": {
            "type": "boolean"
          }
        }
      },
      "Link": {
        "type": "object",
        "properties": {
          "href": {
            "type": "string"
          },
          "templated": {
            "type": "boolean"
          }
        }
      }
    },
    "securitySchemes": {
      "api-key": {
        "type": "apiKey",
        "name": "X-Api-Key",
        "in": "header"
      },
      "jwt-token": {
        "type": "http",
        "in": "header",
        "scheme": "bearer"
      }
    }
  }
}